name: Build & Deploy to Cloudflare Pages (apps/web + pnpm)

on:
  push:
    branches: [ master ]
    paths:
      - 'apps/web/**'
      - 'packages/**'               # 如果 web 依赖 monorepo 内的包，保留；否则可删
      - 'pnpm-lock.yaml'
      - 'package.json'
      - '.github/workflows/deploy-pages.yml'
  pull_request:
    branches: [ master ]
    types: [ opened, synchronize ]
  workflow_dispatch:

env:
  NODE_VERSION: '20'
  PROJECT_DIR: apps/web

jobs:
  build-and-deploy:
    # 合并两套流程：
    # - master push 一律执行（含发布）
    # - 合并 PR 时执行构建
    runs-on: ubuntu-latest
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref_name }}-react-typescripts
      cancel-in-progress: true

    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # 先安装 pnpm，再设置 Node（并启用 pnpm 缓存）
      - name: Print run info
        run: |
          echo "Run ID: ${{ github.run_id }}"
          echo "Run Number: ${{ github.run_number }}"
          echo "Ref: ${{ github.ref }}"
          echo "SHA: ${{ github.sha }}"
          
      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          version: 10.14.0

      - name: Setup Node & pnpm
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'pnpm'

      # 安装依赖（monorepo 推荐在仓库根执行）
      - name: Install dependencies (pnpm)
        run: pnpm install --frozen-lockfile

      - name: Generate version
        run: |
          chmod +x .github/scripts/gen-version.sh
          .github/scripts/gen-version.sh

      - name: Build apps/web
        working-directory: ${{ env.PROJECT_DIR }}
        run: pnpm run build

      # 安装 Wrangler 并通过 Cloudflare Open API 发布到 Pages（仅 push 发布）
      - name: Publish to Cloudflare Pages
        run: |
          echo "Run ID: ${{ github.run_id }}"
          pnpm dlx wrangler@^3 pages deploy "${{ env.PROJECT_DIR }}/dist" \
            --project-name "react-typescripts" \
            --branch "${{ github.ref_name }}"
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
      # 可选：把此次构建的 dist 归档，方便下载/核对
      - name: Upload dist artifact (optional)
        uses: actions/upload-artifact@v4
        with:
          name: dist-apps-web
          path: ${{ env.PROJECT_DIR }}/dist
          if-no-files-found: warn
          retention-days: 7
