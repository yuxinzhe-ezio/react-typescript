name: Build & Deploy to Cloudflare Pages (multi-project + yarn)

on:
  push:
    branches: [master]
    paths:
      - 'apps/**'
      - 'packages/**'
      - 'pnpm-lock.yaml'
      - 'package.json'
      - '.github/workflows/deploy-pages.yml'
  pull_request:
    branches: [master]
    types: [opened, synchronize, reopened, labeled, unlabeled]
    paths:
      - 'apps/**'
      - 'packages/**'
      - 'pnpm-lock.yaml'
      - 'package.json'
      - '.github/workflows/deploy-pages.yml'
  workflow_dispatch:

env:
  NODE_VERSION: 22.18.0

jobs:
  build-and-deploy:
    # 集成分支的 push 一律构建；PR 仅在带 deploy 标签时构建（精确匹配）
    if: >-
      github.event_name == 'push' || github.event_name == 'workflow_dispatch' || (
        github.event_name == 'pull_request' && contains(github.event.pull_request.labels.*.name, 'deploy')
      )
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        include:
          - project: web3
            cf: plaud-web3
          - project: web
            cf: plaud-web
          - project: editor
            cf: plaud-editor
    concurrency:
      group: ${{ github.workflow }}-${{ github.ref_name }}-${{ matrix.project }}
      cancel-in-progress: true
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      # 设置 Node 并启用 yarn 缓存
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: yarn
          cache-dependency-path: yarn.lock

      - name: Restore Yarn tarball cache
        id: yarn_cache_restore
        uses: actions/cache/restore@v4
        with:
          path: ~/.cache/yarn/v6
          key: yarn-cache-${{ runner.os }}-${{ env.NODE_VERSION }}-${{ hashFiles('yarn.lock') }}

      - name: Prepare (version + install)
        id: prepare
        run: |
          npx --yes tsx .github/scripts/gen-version.ts
          yarn install --frozen-lockfile --prefer-offline

      - name: Save Yarn tarball cache (save when not restored)
        if: ${{ steps.yarn_cache_restore.outputs.cache-hit != 'true' }}
        uses: actions/cache/save@v4
        with:
          path: ~/.cache/yarn/v6
          key: yarn-cache-${{ runner.os }}-${{ env.NODE_VERSION }}-${{ hashFiles('yarn.lock') }}

      - name: Build ${{ matrix.project }}
        working-directory: ${{ matrix.project }}
        run: yarn build
        env:
          OUT_DIR: dist
          PUBLIC_PATH: ./
          VERSION: ${{ env.VERSION }}
          CF_PAGES_PROJECT: ${{ matrix.cf }}

      # 发布并通知 Lark
      - name: Publish to Cloudflare Pages & Notify Lark
        id: publish
        run: |
          npx --yes wrangler@^3 pages deploy "${{ matrix.project }}/dist" \
            --project-name "${{ matrix.cf }}" \
            --branch "${{ github.ref_name }}"
          PR_URL="${{ github.event.pull_request.html_url }}" \
          BRANCH_NAME="${{ github.head_ref || github.ref_name }}" \
          JOB_STATUS=success \
          GITHUB_RUN_URL="${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}" \
          CF_PAGES_PROJECT="${{ matrix.cf }}" \
          npx --yes tsx .github/scripts/send-lark.ts --type interactive --title "${{ matrix.cf }} (${{ env.VERSION }})"
        env:
          CLOUDFLARE_API_TOKEN: ${{ secrets.CLOUDFLARE_API_TOKEN }}
          CLOUDFLARE_ACCOUNT_ID: ${{ secrets.CLOUDFLARE_ACCOUNT_ID }}
          LARK_WEBHOOK_URL: ${{ secrets.LARK_WEBHOOK_URL }}

      - name: Upload dist artifact (optional)
        uses: actions/upload-artifact@v4
        with:
          name: dist-${{ matrix.cf }}
          path: ${{ matrix.project }}/dist
          if-no-files-found: warn
          retention-days: 7
